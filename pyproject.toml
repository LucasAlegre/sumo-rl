[build-system]
requires = ["setuptools >= 61.0.0"]
build-backend = "setuptools.build_meta"

[project]
name = "sumo-rl"
description="RL environments and learning code for traffic signal control in SUMO."
readme = "README.md"
requires-python = ">= 3.7"
authors = [{ name = "Lucas Alegre", email = "lucasnale@gmail.com" }]
license = { text = "MIT License" }
keywords = ["Reinforcement Learning", "Traffic Signal Control", "SUMO", "RL", "PettingZoo", "gymnasium"]
dependencies = [
    'gymnasium>=0.26',
    'pettingzoo>=1.22.2',
    'numpy',
    'pandas',
    'pillow',
    'sumolib>=1.14.0',
    'traci>=1.14.0'
]
dynamic = ["version"]

[project.optional-dependencies]
# Update dependencies in `all` if any are added or removed
rendering = ["pyvirtualdisplay"]
all = [
   "pyvirtualdisplay",
]
testing = ["pytest ==7.1.3"]

[project.urls]
Homepage = "https://lucasalegre.github.io/sumo-rl"
Repository = "https://github.com/LucasAlegre/sumo-rl"
Documentation = "https://lucasalegre.github.io/sumo-rl"
"Bug Report" = "https://github.com/LucasAlegre/sumo-rl/issues"

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
include = ["sumo_rl", "sumo_rl.*"]

[tool.setuptools.package-data]
sumo_rl = [
    "nets/*",
]

# Linters and Test tools #######################################################

[tool.black]
safe = true
line-length = 127
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'

[tool.isort]
atomic = true
profile = "black"
src_paths = ["sumo_rl", "tests", "docs/scripts"]
extra_standard_library = ["typing_extensions"]
indent = 4
lines_after_imports = 2
multi_line_output = 3

[tool.pyright]
include = ["sumo_rl/**", "tests/**"]
exclude = ["**/node_modules", "**/__pycache__"]
strict = []

typeCheckingMode = "basic"
pythonVersion = "3.8"
pythonPlatform = "All"
typeshedPath = "typeshed"
enableTypeIgnoreComments = true

# This is required as the CI pre-commit does not download the module (i.e. numpy, pygame)
#   Therefore, we have to ignore missing imports
reportMissingImports = "none"
# Some modules are missing type stubs, which is an issue when running pyright locally
reportMissingTypeStubs = false
# For warning and error, will raise an error when
reportInvalidTypeVarUse = "none"

# reportUnknownMemberType = "warning"  # -> raises warnings
# reportUnknownParameterType = "warning"  # -> raises warnings
# reportUnknownVariableType = "warning"  # -> raises warnings
# reportUnknownArgumentType = "warning"  # -> raises warnings
reportGeneralTypeIssues = "none"  # -> commented out raises 489 errors
reportUntypedFunctionDecorator = "none"  # -> pytest.mark.parameterize issues

reportOptionalMemberAccess = "none" # -> commented out raises warnings
reportPrivateImportUsage = "warning" # -> this raises warnings because we use not exported modules from gym (wrappers)

reportPrivateUsage = "warning"
reportUnboundVariable = "warning"

[tool.pytest.ini_options]
filterwarnings = ['ignore:.*The environment .* is out of date.*']
# filterwarnings = ['ignore:.*step API.*:DeprecationWarning']
